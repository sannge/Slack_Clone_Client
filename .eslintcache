[{"/Users/sannge/Projects/slack/slack_clone_client/src/index.js":"1","/Users/sannge/Projects/slack/slack_clone_client/src/reportWebVitals.js":"2","/Users/sannge/Projects/slack/slack_clone_client/src/routes/index.js":"3","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Home.js":"4","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Register.js":"5","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Login.js":"6","/Users/sannge/Projects/slack/slack_clone_client/src/routes/CreateTeam.js":"7","/Users/sannge/Projects/slack/slack_clone_client/src/routes/ViewTeam.js":"8","/Users/sannge/Projects/slack/slack_clone_client/src/components/Channels.js":"9","/Users/sannge/Projects/slack/slack_clone_client/src/components/Teams.js":"10","/Users/sannge/Projects/slack/slack_clone_client/src/components/Messages.js":"11","/Users/sannge/Projects/slack/slack_clone_client/src/components/Header.js":"12","/Users/sannge/Projects/slack/slack_clone_client/src/components/AppLayout.js":"13","/Users/sannge/Projects/slack/slack_clone_client/src/components/SendMessage.js":"14","/Users/sannge/Projects/slack/slack_clone_client/src/containers/SideBar.js":"15","/Users/sannge/Projects/slack/slack_clone_client/src/components/AddChannelModal.js":"16","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/team.js":"17","/Users/sannge/Projects/slack/slack_clone_client/src/components/InvitePeopleModal.js":"18"},{"size":1920,"mtime":1611296631815,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611039326458,"results":"21","hashOfConfig":"20"},{"size":1245,"mtime":1611522599378,"results":"22","hashOfConfig":"20"},{"size":360,"mtime":1611045660341,"results":"23","hashOfConfig":"20"},{"size":2833,"mtime":1611277754929,"results":"24","hashOfConfig":"20"},{"size":2796,"mtime":1611278531883,"results":"25","hashOfConfig":"20"},{"size":2512,"mtime":1611524927913,"results":"26","hashOfConfig":"20"},{"size":1646,"mtime":1611643407075,"results":"27","hashOfConfig":"20"},{"size":2266,"mtime":1611643708204,"results":"28","hashOfConfig":"20"},{"size":1144,"mtime":1611521554160,"results":"29","hashOfConfig":"20"},{"size":102,"mtime":1611428622560,"results":"30","hashOfConfig":"20"},{"size":310,"mtime":1611429734123,"results":"31","hashOfConfig":"20"},{"size":180,"mtime":1611428616763,"results":"32","hashOfConfig":"20"},{"size":344,"mtime":1611430063125,"results":"33","hashOfConfig":"20"},{"size":1722,"mtime":1611644826507,"results":"34","hashOfConfig":"20"},{"size":3106,"mtime":1611640262780,"results":"35","hashOfConfig":"20"},{"size":163,"mtime":1611526827512,"results":"36","hashOfConfig":"20"},{"size":3110,"mtime":1611644850881,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1eujft4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sannge/Projects/slack/slack_clone_client/src/index.js",[],["80","81"],"/Users/sannge/Projects/slack/slack_clone_client/src/reportWebVitals.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/index.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Home.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Register.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Login.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/CreateTeam.js",["82"],"import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { extendObservable } from \"mobx\";\nimport {\n\tMessage,\n\tForm,\n\tContainer,\n\tHeader,\n\tInput,\n\tButton,\n} from \"semantic-ui-react\";\nimport { gql } from \"@apollo/client\";\nimport { graphql } from \"@apollo/client/react/hoc\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateTeam extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\textendObservable(this, {\n\t\t\tname: \"\",\n\t\t\terrors: {},\n\t\t});\n\t}\n\n\tonChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tthis[name] = value;\n\t};\n\n\tonSubmit = async () => {\n\t\tthis.errors = {};\n\t\tconst { name } = this;\n\t\tlet response = null;\n\n\t\ttry {\n\t\t\tresponse = await this.props.mutate({\n\t\t\t\tvariables: { name },\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.props.history.push(\"/login\");\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(response);\n\n\t\t// console.log(this.props.data.networkStatus);\n\n\t\tconst { ok, errors, team } = response.data.createTeam;\n\t\tif (ok) {\n\t\t\tconsole.log(\"OKOK\");\n\t\t\tconsole.log(this.props.history);\n\t\t\tthis.props.history.push(`/view-team/${team.id}`);\n\t\t} else {\n\t\t\tconst err = {};\n\t\t\terrors.forEach(({ path, message }) => {\n\t\t\t\terr[`${path}Error`] = message;\n\t\t\t});\n\n\t\t\tthis.errors = { ...err };\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\terrors: { nameError },\n\t\t} = this;\n\n\t\tconst errorList = [];\n\n\t\tif (nameError) {\n\t\t\terrorList.push(nameError);\n\t\t}\n\n\t\treturn (\n\t\t\t<Container text>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\tpadding: \"40px\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<Header as='h1'>Create a Team</Header>\n\t\t\t\t</div>\n\t\t\t\t{/* {usernameError || emailError || passwordError ? (\n\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\theader={\"There was some errors with your submission\"}\n\t\t\t\t\t\t\tlist={errorList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null} */}\n\t\t\t\t{errorList.length > 0 && (\n\t\t\t\t\t<Message\n\t\t\t\t\t\terror\n\t\t\t\t\t\theader={\"There was some errors with your submission\"}\n\t\t\t\t\t\tlist={errorList}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Field error={!!nameError}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Button size='big' fluid color='twitter' onClick={this.onSubmit}>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nconst CREATE_TEAM = gql`\n\tmutation createTeam($name: String!) {\n\t\tcreateTeam(name: $name) {\n\t\t\tok\n\t\t\tteam {\n\t\t\t\tid\n\t\t\t}\n\t\t\terrors {\n\t\t\t\tpath\n\t\t\t\tmessage\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default graphql(CREATE_TEAM)(observer(CreateTeam));\n","/Users/sannge/Projects/slack/slack_clone_client/src/routes/ViewTeam.js",["83","84"],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Channels.js",["85"],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Teams.js",["86"],"import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst TeamWrapper = styled.div`\n\tgrid-column: 1;\n\tgrid-row: 1 / 4;\n\tbackground: #362234;\n\tcolor: #958993;\n`;\n\nconst TeamList = styled.ul`\n\twidth: 100%;\n\tpadding-left: 0px;\n\tlist-style: none;\n`;\n\nconst TeamListItem = styled.li`\n\tcursor: pointer;\n\theight: 50px;\n\twidth: 50px;\n\tbackground-color: #676066;\n\tcolor: #fff;\n\tmargin: auto;\n\tmargin-bottom: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 24px;\n\tborder-radius: 11px;\n\ttransition: border 0.05s ease-in-out;\n\t&:hover {\n\t\tborder-style: solid;\n\t\tborder-width: thick;\n\t\tborder-color: #767676;\n\t}\n`;\n\nconst EachTeamItem = styled.div`\n\t& .active .listItem {\n\t\tborder-style: solid;\n\t\tborder-width: thick;\n\t\tborder-color: #767676;\n\t}\n`;\n\nconst team = ({ id, letter }, index) => (\n\t<EachTeamItem key={`team-${id}`}>\n\t\t<NavLink activeClassName='active' to={`/view-team/${id}`}>\n\t\t\t<TeamListItem className='listItem'>{letter}</TeamListItem>\n\t\t</NavLink>\n\t</EachTeamItem>\n);\nexport default ({ teams }) => (\n\t<TeamWrapper>\n\t\t<TeamList>{teams.map(team)}</TeamList>\n\t</TeamWrapper>\n);\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/Messages.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Header.js",["87"],"import styled from \"styled-components\";\nimport React from \"react\";\nimport { Header } from \"semantic-ui-react\";\n\nconst HeaderWrapper = styled.div`\n\tgrid-column: 3;\n\tgrid-row: 1;\n`;\n\nexport default ({ channelName }) => (\n\t<HeaderWrapper>\n\t\t<Header textAlign='center'>#{channelName}</Header>\n\t</HeaderWrapper>\n);\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/AppLayout.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/SendMessage.js",["88"],"import styled from \"styled-components\";\nimport { Input } from \"semantic-ui-react\";\nimport React from \"react\";\n\nconst SendMessageWrapper = styled.div`\n\tgrid-column: 3;\n\tgrid-row: 3;\n\tmargin: 20px;\n`;\n\nexport default ({ channelName }) => (\n\t<SendMessageWrapper>\n\t\t<Input fluid placeholder={`Message #${channelName}`} />\n\t</SendMessageWrapper>\n);\n","/Users/sannge/Projects/slack/slack_clone_client/src/containers/SideBar.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/AddChannelModal.js",["89"],"import React from \"react\";\nimport { Form, Input, Modal, Button } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { gql } from \"@apollo/client\";\nimport { graphql } from \"@apollo/client/react/hoc\";\nimport { ALLTEAMSQUERY } from \"../graphql/team\";\nimport findIndex from \"lodash/findIndex\";\n\nfunction AddChannelModal({ open, onCloseAddChannelClick, teamId, mutate }) {\n\treturn (\n\t\t<Modal open={open} onClose={onCloseAddChannelClick}>\n\t\t\t<Modal.Header>Add Channel</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ name: \"\" }}\n\t\t\t\t\tonSubmit={async (values, { setSubmitting }) => {\n\t\t\t\t\t\tlet response;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = await mutate({\n\t\t\t\t\t\t\t\tvariables: { teamId: parseInt(teamId), name: values.name },\n\t\t\t\t\t\t\t\tupdate: (store, { data: { createChannel } }) => {\n\t\t\t\t\t\t\t\t\tconst { ok, channel } = createChannel;\n\t\t\t\t\t\t\t\t\tif (!ok) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconsole.log(ok);\n\t\t\t\t\t\t\t\t\tconst dataCopy = {\n\t\t\t\t\t\t\t\t\t\t...store.readQuery({ query: ALLTEAMSQUERY }),\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tconst teamIdx = dataCopy.allTeams.findIndex(\n\t\t\t\t\t\t\t\t\t\t(team) => team.id === parseInt(teamId)\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst allTeamsCopy = [...dataCopy.allTeams];\n\t\t\t\t\t\t\t\t\tlet teamCopy = { ...allTeamsCopy[teamIdx] };\n\t\t\t\t\t\t\t\t\tconst channelsCopy = [...teamCopy.channels];\n\t\t\t\t\t\t\t\t\tchannelsCopy.push(channel);\n\n\t\t\t\t\t\t\t\t\tteamCopy.channels = channelsCopy;\n\t\t\t\t\t\t\t\t\tallTeamsCopy[teamIdx] = teamCopy;\n\t\t\t\t\t\t\t\t\tdataCopy.allTeams = allTeamsCopy;\n\n\t\t\t\t\t\t\t\t\tstore.writeQuery({\n\t\t\t\t\t\t\t\t\t\tquery: ALLTEAMSQUERY,\n\t\t\t\t\t\t\t\t\t\tdata: dataCopy,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// data.comments.push(submitComment);\n\t\t\t\t\t\t\t\t\t// store.writeQuery({ query: CommentAppQuery, data });\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\t\tonCloseAddChannelClick();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tvalues.name = \"\";\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t}}>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t/* and other goodies */\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder='Type a Channel Name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tonClick={onCloseAddChannelClick}\n\t\t\t\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\t\t\t\tfluid>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tfluid>\n\t\t\t\t\t\t\t\t\tCreate Channel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Modal.Content>\n\t\t</Modal>\n\t);\n}\n\nconst CREATE_CHANNEL = gql`\n\tmutation createChannel($teamId: Int!, $name: String!) {\n\t\tcreateChannel(teamId: $teamId, name: $name) {\n\t\t\tok\n\t\t\tchannel {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default graphql(CREATE_CHANNEL)(AddChannelModal);\n","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/team.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/InvitePeopleModal.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":10,"nodeType":"97","messageId":"98","endLine":14,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":68,"column":1,"nodeType":"103","endLine":122,"endColumn":3},{"ruleId":"101","severity":1,"message":"102","line":53,"column":1,"nodeType":"103","endLine":57,"endColumn":3},{"ruleId":"101","severity":1,"message":"102","line":10,"column":1,"nodeType":"103","endLine":14,"endColumn":3},{"ruleId":"101","severity":1,"message":"102","line":11,"column":1,"nodeType":"103","endLine":15,"endColumn":3},{"ruleId":"95","severity":1,"message":"104","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":17},{"ruleId":"95","severity":1,"message":"104","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":17},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Channels' is defined but never used.","'Teams' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'findIndex' is defined but never used.","no-global-assign","no-unsafe-negation"]