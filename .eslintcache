[{"/Users/sannge/Projects/slack/slack_clone_client/src/index.js":"1","/Users/sannge/Projects/slack/slack_clone_client/src/reportWebVitals.js":"2","/Users/sannge/Projects/slack/slack_clone_client/src/routes/index.js":"3","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Home.js":"4","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Register.js":"5","/Users/sannge/Projects/slack/slack_clone_client/src/routes/Login.js":"6","/Users/sannge/Projects/slack/slack_clone_client/src/routes/CreateTeam.js":"7","/Users/sannge/Projects/slack/slack_clone_client/src/routes/ViewTeam.js":"8","/Users/sannge/Projects/slack/slack_clone_client/src/components/Channels.js":"9","/Users/sannge/Projects/slack/slack_clone_client/src/components/Teams.js":"10","/Users/sannge/Projects/slack/slack_clone_client/src/components/Messages.js":"11","/Users/sannge/Projects/slack/slack_clone_client/src/components/Header.js":"12","/Users/sannge/Projects/slack/slack_clone_client/src/components/AppLayout.js":"13","/Users/sannge/Projects/slack/slack_clone_client/src/components/SendMessage.js":"14","/Users/sannge/Projects/slack/slack_clone_client/src/containers/SideBar.js":"15","/Users/sannge/Projects/slack/slack_clone_client/src/components/AddChannelModal.js":"16","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/team.js":"17","/Users/sannge/Projects/slack/slack_clone_client/src/components/InvitePeopleModal.js":"18","/Users/sannge/Projects/slack/slack_clone_client/src/normalizeErrors.js":"19","/Users/sannge/Projects/slack/slack_clone_client/src/containers/MessageContainer.js":"20","/Users/sannge/Projects/slack/slack_clone_client/src/apolloClient.js":"21","/Users/sannge/Projects/slack/slack_clone_client/src/ApolloClient.js":"22","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/message.js":"23","/Users/sannge/Projects/slack/slack_clone_client/src/routes/DirectMessages.js":"24","/Users/sannge/Projects/slack/slack_clone_client/src/containers/DirectMessageContainer.js":"25","/Users/sannge/Projects/slack/slack_clone_client/src/components/DirectMessageModal.js":"26","/Users/sannge/Projects/slack/slack_clone_client/src/components/Loading.js":"27","/Users/sannge/Projects/slack/slack_clone_client/src/components/FileUpload.js":"28","/Users/sannge/Projects/slack/slack_clone_client/src/components/Files.js":"29","/Users/sannge/Projects/slack/slack_clone_client/src/components/MultiSelectUsers.js":"30"},{"size":656,"mtime":1611883443129,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1611039326458,"results":"33","hashOfConfig":"32"},{"size":1487,"mtime":1612685150932,"results":"34","hashOfConfig":"32"},{"size":360,"mtime":1611045660341,"results":"35","hashOfConfig":"32"},{"size":2838,"mtime":1612243482269,"results":"36","hashOfConfig":"32"},{"size":2805,"mtime":1612247406810,"results":"37","hashOfConfig":"32"},{"size":2512,"mtime":1611524927913,"results":"38","hashOfConfig":"32"},{"size":2896,"mtime":1612650323407,"results":"39","hashOfConfig":"32"},{"size":3366,"mtime":1612246977426,"results":"40","hashOfConfig":"32"},{"size":1588,"mtime":1612337555602,"results":"41","hashOfConfig":"32"},{"size":247,"mtime":1612552126557,"results":"42","hashOfConfig":"32"},{"size":310,"mtime":1611429734123,"results":"43","hashOfConfig":"32"},{"size":180,"mtime":1611428616763,"results":"44","hashOfConfig":"32"},{"size":3506,"mtime":1612427911456,"results":"45","hashOfConfig":"32"},{"size":2407,"mtime":1612650281585,"results":"46","hashOfConfig":"32"},{"size":4499,"mtime":1612650556423,"results":"47","hashOfConfig":"32"},{"size":392,"mtime":1612218571448,"results":"48","hashOfConfig":"32"},{"size":2884,"mtime":1612244878907,"results":"49","hashOfConfig":"32"},{"size":185,"mtime":1611721970402,"results":"50","hashOfConfig":"32"},{"size":6154,"mtime":1612686937931,"results":"51","hashOfConfig":"32"},{"size":1894,"mtime":1611883634567,"results":"52","hashOfConfig":"32"},{"size":2046,"mtime":1612335217239,"results":"53","hashOfConfig":"32"},{"size":1399,"mtime":1612684530135,"results":"54","hashOfConfig":"32"},{"size":4466,"mtime":1612431567459,"results":"55","hashOfConfig":"32"},{"size":5790,"mtime":1612685300926,"results":"56","hashOfConfig":"32"},{"size":2444,"mtime":1612480237005,"results":"57","hashOfConfig":"32"},{"size":205,"mtime":1612247970313,"results":"58","hashOfConfig":"32"},{"size":621,"mtime":1612325150984,"results":"59","hashOfConfig":"32"},{"size":2523,"mtime":1612427943798,"results":"60","hashOfConfig":"32"},{"size":772,"mtime":1612650202120,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1eujft4",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},"/Users/sannge/Projects/slack/slack_clone_client/src/index.js",[],["135","136"],"/Users/sannge/Projects/slack/slack_clone_client/src/reportWebVitals.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/index.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Home.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Register.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/Login.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/CreateTeam.js",["137"],"import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { extendObservable } from \"mobx\";\nimport {\n\tMessage,\n\tForm,\n\tContainer,\n\tHeader,\n\tInput,\n\tButton,\n} from \"semantic-ui-react\";\nimport { gql } from \"@apollo/client\";\nimport { graphql } from \"@apollo/client/react/hoc\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateTeam extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\textendObservable(this, {\n\t\t\tname: \"\",\n\t\t\terrors: {},\n\t\t});\n\t}\n\n\tonChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tthis[name] = value;\n\t};\n\n\tonSubmit = async () => {\n\t\tthis.errors = {};\n\t\tconst { name } = this;\n\t\tlet response = null;\n\n\t\ttry {\n\t\t\tresponse = await this.props.mutate({\n\t\t\t\tvariables: { name },\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.props.history.push(\"/login\");\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(response);\n\n\t\t// console.log(this.props.data.networkStatus);\n\n\t\tconst { ok, errors, team } = response.data.createTeam;\n\t\tif (ok) {\n\t\t\tconsole.log(\"OKOK\");\n\t\t\tconsole.log(this.props.history);\n\t\t\tthis.props.history.push(`/view-team/${team.id}`);\n\t\t} else {\n\t\t\tconst err = {};\n\t\t\terrors.forEach(({ path, message }) => {\n\t\t\t\terr[`${path}Error`] = message;\n\t\t\t});\n\n\t\t\tthis.errors = { ...err };\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\terrors: { nameError },\n\t\t} = this;\n\n\t\tconst errorList = [];\n\n\t\tif (nameError) {\n\t\t\terrorList.push(nameError);\n\t\t}\n\n\t\treturn (\n\t\t\t<Container text>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\tpadding: \"40px\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<Header as='h1'>Create a Team</Header>\n\t\t\t\t</div>\n\t\t\t\t{/* {usernameError || emailError || passwordError ? (\n\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\theader={\"There was some errors with your submission\"}\n\t\t\t\t\t\t\tlist={errorList}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null} */}\n\t\t\t\t{errorList.length > 0 && (\n\t\t\t\t\t<Message\n\t\t\t\t\t\terror\n\t\t\t\t\t\theader={\"There was some errors with your submission\"}\n\t\t\t\t\t\tlist={errorList}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Field error={!!nameError}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Button size='big' fluid color='twitter' onClick={this.onSubmit}>\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nconst CREATE_TEAM = gql`\n\tmutation createTeam($name: String!) {\n\t\tcreateTeam(name: $name) {\n\t\t\tok\n\t\t\tteam {\n\t\t\t\tid\n\t\t\t}\n\t\t\terrors {\n\t\t\t\tpath\n\t\t\t\tmessage\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default graphql(CREATE_TEAM)(observer(CreateTeam));\n","/Users/sannge/Projects/slack/slack_clone_client/src/routes/ViewTeam.js",["138","139","140","141"],"import React, { useState, useEffect } from \"react\";\nimport Channels from \"../components/Channels\";\nimport Teams from \"../components/Teams\";\nimport Header from \"../components/Header\";\nimport SendMessage from \"../components/SendMessage\";\nimport Messages from \"../components/Messages\";\nimport AppLayout from \"../components/AppLayout\";\nimport Sidebar from \"../containers/SideBar\";\nimport MessageContainer from \"../containers/MessageContainer\";\n\nimport { graphql } from \"@apollo/client/react/hoc\";\n\nimport { useMutation } from \"@apollo/client\";\n\nimport { ME_QUERY } from \"../graphql/team\";\n\nimport findIndex from \"lodash/findIndex\";\nimport { SEND_MESSAGE } from \"../graphql/message\";\n\nfunction ViewTeam({\n\tdata: { loading, me, error },\n\thistory,\n\tmatch: {\n\t\tparams: { teamId, channelId },\n\t},\n}) {\n\tconst [files, setFiles] = useState([]);\n\n\tconst onDrop = (arr) => {\n\t\tif (files.length > 0) {\n\t\t\tconst copyFiles = [...files];\n\t\t\tsetFiles(copyFiles.concat(arr));\n\t\t} else {\n\t\t\tconsole.log(arr[0].name);\n\t\t\tsetFiles(arr);\n\t\t}\n\t};\n\tconst [createMessage, { loading: createMessageLoading }] = useMutation(\n\t\tSEND_MESSAGE\n\t);\n\n\tif (loading) {\n\t\treturn null;\n\t}\n\tif (error) {\n\t\tconsole.log(error);\n\t}\n\n\tconst { id: currentUserId, teams: allTeams, username } = me;\n\n\tlet teamIdx = teamId\n\t\t? findIndex(allTeams, [\"id\", parseInt(teamId, 10)])\n\t\t: history.push(`/view-team/${allTeams[0].id}`);\n\t// if (teamIdx === 0) {\n\t// \thistory.push(`/view-team/${allTeams[0].id}`);\n\t// }\n\tif (!teamIdx) teamIdx = 0;\n\n\tif (teamIdx === -1) {\n\t\tteamIdx = 0;\n\t\thistory.push(`/view-team/${allTeams[0].id}`);\n\t}\n\tconst team = allTeams[teamIdx];\n\n\tlet channelIdx = channelId\n\t\t? findIndex(team.channels, [\"id\", parseInt(channelId, 10)])\n\t\t: 0;\n\tif (channelIdx === -1) {\n\t\tchannelIdx = 0;\n\t\thistory.push(\n\t\t\t`/view-team/${allTeams[0].id}/${team.channels[channelIdx].id}`\n\t\t);\n\t}\n\tconst channel = team.channels[channelIdx];\n\n\treturn (\n\t\t<AppLayout>\n\t\t\t<Sidebar\n\t\t\t\tcurrentUserId={currentUserId}\n\t\t\t\tteams={allTeams.map((t) => ({\n\t\t\t\t\tid: t.id,\n\t\t\t\t\tadmin: t.admin,\n\t\t\t\t\tletter: t.name.charAt(0).toUpperCase(),\n\t\t\t\t}))}\n\t\t\t\tallTeams={allTeams}\n\t\t\t\tteam={team}\n\t\t\t\tcurrentTeamId={teamId}\n\t\t\t\tusername={username}\n\t\t\t/>\n\t\t\t{channel && <Header channelName={channel.name} />}\n\t\t\t{channel && (\n\t\t\t\t<>\n\t\t\t\t\t<MessageContainer\n\t\t\t\t\t\tcreateMessageLoading={createMessageLoading}\n\t\t\t\t\t\tchannelId={channel.id}\n\t\t\t\t\t\theight={files.length > 0 ? 70 : 80}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{channel && (\n\t\t\t\t<SendMessage\n\t\t\t\t\tplaceholder={channel.name}\n\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\tfiles={files}\n\t\t\t\t\tsetFiles={setFiles}\n\t\t\t\t\tcreateMessageLoading={createMessageLoading}\n\t\t\t\t\tonSubmit={async (text) => {\n\t\t\t\t\t\tawait createMessage({\n\t\t\t\t\t\t\tvariables: { text, channelId: channel.id, files: files },\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetFiles([]);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</AppLayout>\n\t);\n}\n\nexport default graphql(ME_QUERY, { options: { fetchPolicy: \"network-only\" } })(\n\tViewTeam\n);\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/Channels.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Teams.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Messages.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Header.js",["142"],"import styled from \"styled-components\";\nimport React from \"react\";\nimport { Header } from \"semantic-ui-react\";\n\nconst HeaderWrapper = styled.div`\n\tgrid-column: 3;\n\tgrid-row: 1;\n`;\n\nexport default ({ channelName }) => (\n\t<HeaderWrapper>\n\t\t<Header textAlign='center'>#{channelName}</Header>\n\t</HeaderWrapper>\n);\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/AppLayout.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/SendMessage.js",["143","144","145"],"import styled from \"styled-components\";\nimport { Icon, TextArea, Form } from \"semantic-ui-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { Formik } from \"formik\";\n\nimport decode from \"jwt-decode\";\n\nimport FileUpload from \"./FileUpload\";\nimport Files from \"./Files\";\n\nconst SendMessageWrapper = styled.div`\n\tgrid-column: 3;\n\tgrid-row: 3;\n\tmargin: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 90%;\n`;\n\nconst ImageDiv = styled.div`\n\t&::-webkit-scrollbar {\n\t\tdisplay: none;\n\t}\n\twidth: 100%;\n\theight: 80px;\n\tbackground: white;\n\tpadding: 15px;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\tdisplay: flex;\n\talign-items: center;\n\tborder: 1px solid #ccc;\n\tborder-bottom: none;\n`;\n\nconst ENTER_KEY = 13;\n\nconst SendMessage = ({\n\tonSubmit,\n\tonDrop,\n\tfiles,\n\tmatch,\n\tsetFiles,\n\tplaceholder,\n\tcreateMessageLoading,\n}) => {\n\tconst urlPrams = match.params;\n\n\tconst { teamId, userId, channelId } = urlPrams;\n\n\tconst [empty, setEmpty] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetFiles([]);\n\t\tsetEmpty(true);\n\t}, [teamId, userId, channelId]);\n\treturn (\n\t\t<SendMessageWrapper>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}>\n\t\t\t\t{files?.length > 0 && (\n\t\t\t\t\t<ImageDiv>\n\t\t\t\t\t\t<Files\n\t\t\t\t\t\t\tcreateMessageLoading={createMessageLoading}\n\t\t\t\t\t\t\tsetFiles={setFiles}\n\t\t\t\t\t\t\tfiles={files}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ImageDiv>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ message: \"\" }}\n\t\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\n\t\t\t\t\t\tif (!values.message || !values.message.trim()) {\n\t\t\t\t\t\t\tif (files.length === 0) {\n\t\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (values.message.trim() !== \"\") {\n\t\t\t\t\t\t\t\tawait onSubmit(values.message);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(\"empty message\");\n\t\t\t\t\t\t\t\tawait onSubmit();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// await mutate({\n\t\t\t\t\t\t\t// \tvariables: { channelId, text: values.message },\n\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\t} catch (err) {}\n\t\t\t\t\t}}>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\tresetForm,\n\t\t\t\t\t\t/* and other goodies */\n\t\t\t\t\t}) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tborderTop: `${\n\t\t\t\t\t\t\t\t\t\t\tfiles.length > 0 ? \"none\" : \".3px solid #eee\"\n\t\t\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\t\t\t\t\tif (e.keyCode === ENTER_KEY && !isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\thandleSubmit(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tname='message'\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tdisabled={createMessageLoading}\n\t\t\t\t\t\t\t\t\tvalue={values.message}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder={`Message #${placeholder}`}></TextArea>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tbackground: \"#eee\",\n\t\t\t\t\tjustifyContent: \"flex-end\",\n\t\t\t\t}}>\n\t\t\t\t<FileUpload onDrop={onDrop}>\n\t\t\t\t\t<div className='ui icon buttons' style={{ marginRight: \"1px\" }}>\n\t\t\t\t\t\t<button className='ui button'>\n\t\t\t\t\t\t\t<Icon style={{ color: \"#634343\" }} name='plus square outline' />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</FileUpload>\n\t\t\t\t<div className='ui icon buttons'>\n\t\t\t\t\t<button className='ui button'>\n\t\t\t\t\t\t<Icon name='smile outline' style={{ color: \"#634343\" }} />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</SendMessageWrapper>\n\t);\n};\nexport default withRouter(SendMessage);\n","/Users/sannge/Projects/slack/slack_clone_client/src/containers/SideBar.js",["146"],"import React from \"react\";\nimport Teams from \"../components/Teams\";\nimport Channels from \"../components/Channels\";\nimport AddChannelModal from \"../components/AddChannelModal\";\nimport InvitePeopleModal from \"../components/InvitePeopleModal\";\nimport DirectMessageModal from \"../components/DirectMessageModal\";\n\nclass Sidebar extends React.Component {\n\tstate = {\n\t\topenAddChannelModal: false,\n\t\topenInvitePeopleModal: false,\n\t\topenDirectMessageModal: false,\n\t};\n\n\thandleAddChannelClick = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openAddChannelModal: true });\n\t};\n\n\thandleCloseAddChannelModal = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openAddChannelModal: false });\n\t};\n\thandleOpenDirectMessageModal = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openDirectMessageModal: true });\n\t};\n\n\thandleCloseDirectMessageModal = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openDirectMessageModal: false });\n\t};\n\n\tonInvitePeople = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openInvitePeopleModal: true });\n\t};\n\n\tonInvitePeopleClose = (e) => {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({ openInvitePeopleModal: false });\n\t};\n\n\trender() {\n\t\tconst { teams, currentTeamId, team, username, currentUserId } = this.props;\n\n\t\t// console.log(\"ALL TEAMs: \", allTeams, loading);\n\t\t// if (allTeams.length === 0) {\n\t\t// \treturn <Redirect to='/create-team' />;\n\t\t// }\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Teams teams={teams} />\n\n\t\t\t\t<Channels\n\t\t\t\t\tteamName={team?.name}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tteamId={team?.id}\n\t\t\t\t\tisOwner={team?.admin}\n\t\t\t\t\tchannels={team?.channels}\n\t\t\t\t\tusers={team?.directMessageMembers}\n\t\t\t\t\tonAddChannelClick={this.handleAddChannelClick}\n\t\t\t\t\tonInvitePeople={this.onInvitePeople}\n\t\t\t\t\tonDirectMessageClick={this.handleOpenDirectMessageModal}\n\t\t\t\t/>\n\n\t\t\t\t<AddChannelModal\n\t\t\t\t\tteamId={team?.id}\n\t\t\t\t\topen={this.state.openAddChannelModal}\n\t\t\t\t\tonCloseAddChannelClick={this.handleCloseAddChannelModal}\n\t\t\t\t\tcurrentTeamId={currentUserId}\n\t\t\t\t/>\n\n\t\t\t\t<InvitePeopleModal\n\t\t\t\t\tteamId={team?.id}\n\t\t\t\t\topen={this.state.openInvitePeopleModal}\n\t\t\t\t\tonClose={this.onInvitePeopleClose}\n\t\t\t\t/>\n\n\t\t\t\t<DirectMessageModal\n\t\t\t\t\topen={this.state.openDirectMessageModal}\n\t\t\t\t\tonClose={this.handleCloseDirectMessageModal}\n\t\t\t\t\tteamId={team?.id}\n\t\t\t\t\tusername={username}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Sidebar;\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/AddChannelModal.js",["147"],"import React from \"react\";\nimport { Form, Input, Modal, Button, Checkbox } from \"semantic-ui-react\";\nimport { Formik } from \"formik\";\nimport { gql } from \"@apollo/client\";\nimport { graphql } from \"@apollo/client/react/hoc\";\nimport { ME_QUERY } from \"../graphql/team\";\nimport normalizeErrors from \"../normalizeErrors\";\nimport MultiSelectUsers from \"./MultiSelectUsers\";\n\nfunction AddChannelModal({\n\topen,\n\tonCloseAddChannelClick,\n\tteamId,\n\tmutate,\n\tcurrentUserId,\n}) {\n\treturn (\n\t\t<Modal open={open} onClose={onCloseAddChannelClick}>\n\t\t\t<Modal.Header>Add Channel</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ members: [], public: true, name: \"\" }}\n\t\t\t\t\tonSubmit={async (values, { setSubmitting }) => {\n\t\t\t\t\t\tlet response;\n\t\t\t\t\t\tif (values.name.trim() === \"\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = await mutate({\n\t\t\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\t\t\tteamId: parseInt(teamId),\n\t\t\t\t\t\t\t\t\tname: values.name,\n\t\t\t\t\t\t\t\t\tpublic: values.public,\n\t\t\t\t\t\t\t\t\tmembers: values.members,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tupdate: (store, { data: { createChannel } }) => {\n\t\t\t\t\t\t\t\t\tconst { ok, channel } = createChannel;\n\t\t\t\t\t\t\t\t\tif (!ok) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst dataCopy = {\n\t\t\t\t\t\t\t\t\t\t...store.readQuery({ query: ME_QUERY }),\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tconsole.log(dataCopy);\n\n\t\t\t\t\t\t\t\t\tconst teamIdx = dataCopy.me.teams.findIndex(\n\t\t\t\t\t\t\t\t\t\t(team) => team.id === parseInt(teamId)\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst meCopy = { ...dataCopy.me };\n\t\t\t\t\t\t\t\t\tconst allTeamsCopy = [...meCopy.teams];\n\t\t\t\t\t\t\t\t\tlet teamCopy = { ...allTeamsCopy[teamIdx] };\n\t\t\t\t\t\t\t\t\tconst channelsCopy = [...teamCopy.channels];\n\t\t\t\t\t\t\t\t\tchannelsCopy.push(channel);\n\n\t\t\t\t\t\t\t\t\tteamCopy.channels = channelsCopy;\n\t\t\t\t\t\t\t\t\tallTeamsCopy[teamIdx] = teamCopy;\n\t\t\t\t\t\t\t\t\tmeCopy.teams = allTeamsCopy;\n\t\t\t\t\t\t\t\t\tdataCopy.me = meCopy;\n\n\t\t\t\t\t\t\t\t\tstore.writeQuery({\n\t\t\t\t\t\t\t\t\t\tquery: ME_QUERY,\n\t\t\t\t\t\t\t\t\t\tdata: dataCopy,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// data.comments.push(submitComment);\n\t\t\t\t\t\t\t\t\t// store.writeQuery({ query: CommentAppQuery, data });\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\tcreateChannel: { ok },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} = response;\n\t\t\t\t\t\t\t\tif (!ok) {\n\t\t\t\t\t\t\t\t\t// errors.name = normalizeErrors(error)[0];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tonCloseAddChannelClick();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tvalues.name = \"\";\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t}}>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\tsetFieldValue,\n\n\t\t\t\t\t\t/* and other goodies */\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t{console.log(errors.name)}\n\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder='Type a Channel Name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\ttoggle\n\t\t\t\t\t\t\t\t\tchecked={!values.public}\n\t\t\t\t\t\t\t\t\tlabel='Private Channel'\n\t\t\t\t\t\t\t\t\tonChange={(e, { checked }) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"public\", !checked);\n\t\t\t\t\t\t\t\t\t\t// setFieldValue(\"members\", []);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t{!values.public && (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<MultiSelectUsers\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.members}\n\t\t\t\t\t\t\t\t\t\t\tteamId={teamId}\n\t\t\t\t\t\t\t\t\t\t\tcurrentUserId={currentUserId}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={(e, { value }) =>\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"members\", value)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select members to invite'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tonClick={onCloseAddChannelClick}\n\t\t\t\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\t\t\t\tfluid>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tfluid>\n\t\t\t\t\t\t\t\t\tCreate Channel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Modal.Content>\n\t\t</Modal>\n\t);\n}\n\nconst CREATE_CHANNEL = gql`\n\tmutation createChannel(\n\t\t$teamId: Int!\n\t\t$name: String!\n\t\t$public: Boolean\n\t\t$members: [Int!]\n\t) {\n\t\tcreateChannel(\n\t\t\tteamId: $teamId\n\t\t\tname: $name\n\t\t\tpublic: $public\n\t\t\tmembers: $members\n\t\t) {\n\t\t\tok\n\t\t\tchannel {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default graphql(CREATE_CHANNEL)(AddChannelModal);\n","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/team.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/InvitePeopleModal.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/normalizeErrors.js",["148"],"export default (errors) =>\n\terrors.reduce((acc, cv) => {\n\t\tif (cv.path in acc) {\n\t\t\tacc[cv.path].push(cv.message);\n\t\t} else {\n\t\t\tacc[cv.path] = [cv.message];\n\t\t}\n\t\treturn acc;\n\t}, {});\n","/Users/sannge/Projects/slack/slack_clone_client/src/containers/MessageContainer.js",["149","150","151","152","153"],"/Users/sannge/Projects/slack/slack_clone_client/src/apolloClient.js",["154"],"/Users/sannge/Projects/slack/slack_clone_client/src/ApolloClient.js",["155"],"import {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloLink,\n\tsplit,\n\tcreateHttpLink,\n} from \"@apollo/client\";\nimport { createUploadLink } from \"apollo-upload-client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nlet httpLink = createUploadLink({\n\turi: \"http://localhost:8080/graphql\",\n});\n\nlet wsLink = new WebSocketLink({\n\turi: \"ws://localhost:8080/graphql\",\n\toptions: {\n\t\treconnect: true,\n\t\tconnectionParams: {\n\t\t\ttoken: localStorage.getItem(\"token\"),\n\t\t\trefreshToken: localStorage.getItem(\"refreshToken\"),\n\t\t},\n\t},\n});\n\nconst authLink = setContext((_, { headers }) => {\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t\"x-token\": localStorage.getItem(\"token\"),\n\t\t\t\"x-refresh-token\": localStorage.getItem(\"refreshToken\"),\n\t\t},\n\t};\n});\n\n//AFTERWARES LIST: [operation.getContext().response.headers === headers response from the server, forward(operation).map(response === response body from the server)]\nconst afterwareLink = new ApolloLink((operation, forward) => {\n\t//need to return forrward(operration)\n\treturn forward(operation).map((response) => {\n\t\tconst context = operation.getContext();\n\t\tconst token = context.response.headers.get(\"x-token\");\n\t\tconst refreshToken = context.response.headers.get(\"x-refresh-token\");\n\t\tif (token) {\n\t\t\tlocalStorage.setItem(\"token\", token);\n\t\t}\n\t\tif (refreshToken) {\n\t\t\tlocalStorage.setItem(\"refreshToken\", refreshToken);\n\t\t}\n\n\t\t//import to return the response so that it passes response\n\t\t//to the inner graphql methods\n\t\treturn response;\n\t});\n});\n\nhttpLink = afterwareLink.concat(httpLink);\nconst httpLinkWithAuth = authLink.concat(httpLink);\n\nconst splitLink = split(\n\t({ query }) => {\n\t\tconst definition = getMainDefinition(query);\n\t\treturn (\n\t\t\tdefinition.kind === \"OperationDefinition\" &&\n\t\t\tdefinition.operation === \"subscription\"\n\t\t);\n\t},\n\twsLink,\n\thttpLinkWithAuth\n);\n\nconst client = new ApolloClient({\n\tlink: splitLink,\n\tcache: new InMemoryCache(),\n});\n\nexport default client;\n","/Users/sannge/Projects/slack/slack_clone_client/src/graphql/message.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/routes/DirectMessages.js",["156","157","158","159"],"import React, { useState } from \"react\";\nimport Channels from \"../components/Channels\";\nimport Teams from \"../components/Teams\";\nimport Header from \"../components/Header\";\nimport SendMessage from \"../components/SendMessage\";\nimport Messages from \"../components/Messages\";\nimport AppLayout from \"../components/AppLayout\";\nimport Sidebar from \"../containers/SideBar\";\nimport DirectMessageContainer from \"../containers/DirectMessageContainer\";\n\nimport { graphql } from \"@apollo/client/react/hoc\";\n\nimport { ME_QUERY } from \"../graphql/team\";\n\nimport { useMutation, gql } from \"@apollo/client\";\n\nimport findIndex from \"lodash/findIndex\";\nimport { CREATE_DIRECT_MESSAGE } from \"../graphql/message\";\n\nfunction DirectMessages({\n\tdata: { loading, me, getUser, error },\n\thistory,\n\tmatch: {\n\t\tparams: { teamId, userId },\n\t},\n}) {\n\tconst [files, setFiles] = useState([]);\n\n\tconst onDrop = (arr) => {\n\t\tif (files.length > 0) {\n\t\t\tconst copyFiles = [...files];\n\t\t\tsetFiles(copyFiles.concat(arr));\n\t\t} else {\n\t\t\tsetFiles(arr);\n\t\t}\n\t};\n\tconst [\n\t\tcreateDirectMessage,\n\t\t{ loading: createDirectMessageLoading },\n\t] = useMutation(CREATE_DIRECT_MESSAGE, {\n\t\tupdate: (store) => {\n\t\t\tconst dataCopy = {\n\t\t\t\t...store.readQuery({ query: ME_QUERY }),\n\t\t\t};\n\t\t\tconst data = store.readQuery({ query: ME_QUERY });\n\n\t\t\tconsole.log(\"DATA::: \", data);\n\n\t\t\tconst teamIdx = dataCopy.me.teams.findIndex(\n\t\t\t\t(team) => team.id === parseInt(teamId)\n\t\t\t);\n\n\t\t\tconst meCopy = { ...dataCopy.me };\n\t\t\tconst allTeamsCopy = [...meCopy.teams];\n\t\t\tconst teamIdx2 = findIndex(allTeamsCopy, [\"id\", team.id]);\n\t\t\tlet teamCopy = { ...allTeamsCopy[teamIdx2] };\n\t\t\tconst directMessageMembersCopy = [...teamCopy.directMessageMembers];\n\n\t\t\tconst notAlreadyThere = directMessageMembersCopy.every(\n\t\t\t\t(member) => member.id !== parseInt(userId, 10)\n\t\t\t);\n\t\t\tif (notAlreadyThere) {\n\t\t\t\tdirectMessageMembersCopy.push({\n\t\t\t\t\t__typename: \"User\",\n\t\t\t\t\tid: userId,\n\t\t\t\t\tusername: getUser.username,\n\t\t\t\t});\n\n\t\t\t\tteamCopy.directMessageMembers = directMessageMembersCopy;\n\t\t\t\tallTeamsCopy[teamIdx2] = teamCopy;\n\t\t\t\tmeCopy.teams = allTeamsCopy;\n\t\t\t\tdataCopy.me = meCopy;\n\t\t\t\tconsole.log(dataCopy);\n\t\t\t\tstore.writeQuery({ query: ME_QUERY, data: dataCopy });\n\t\t\t}\n\t\t},\n\t});\n\n\tif (loading) {\n\t\treturn null;\n\t}\n\tif (error) {\n\t\tconsole.log(error);\n\t}\n\n\tconst { teams: allTeams, username } = me;\n\n\tlet teamIdx = teamId\n\t\t? findIndex(allTeams, [\"id\", parseInt(teamId, 10)])\n\t\t: history.push(`/view-team/${allTeams[0].id}`);\n\t// if (teamIdx === 0) {\n\t// \thistory.push(`/view-team/${allTeams[0].id}`);\n\t// }\n\tif (!teamIdx) teamIdx = 0;\n\n\tif (teamIdx === -1) {\n\t\tteamIdx = 0;\n\t\thistory.push(`/view-team/${allTeams[0].id}`);\n\t}\n\tconst team = allTeams[teamIdx];\n\n\tlet userIdExists = false;\n\tteam?.directMessageMembers.forEach((m) => {\n\t\tif (m.id === userId) {\n\t\t\tuserIdExists = true;\n\t\t\treturn;\n\t\t}\n\t});\n\n\tif (!parseInt(userId) || userIdExists) {\n\t\t// if (teamMemberCount === 0) {\n\n\t\t// } else {\n\t\t// \thistory.push(\n\t\t// \t\t`/view-team/user/${team?.id}/${team?.directMessageMembers[0].id}`\n\t\t// \t);\n\t\t// }\n\t\thistory.push(`/view-team/user/${team?.id}`);\n\t}\n\n\treturn (\n\t\t<AppLayout>\n\t\t\t<Sidebar\n\t\t\t\tteams={allTeams.map((t) => ({\n\t\t\t\t\tid: t.id,\n\t\t\t\t\tadmin: t.admin,\n\t\t\t\t\tletter: t.name.charAt(0).toUpperCase(),\n\t\t\t\t}))}\n\t\t\t\tallTeams={allTeams}\n\t\t\t\tteam={team}\n\t\t\t\tcurrentTeamId={teamId}\n\t\t\t\tusername={username}\n\t\t\t/>\n\t\t\t<Header channelName={getUser.username} />\n\t\t\t<DirectMessageContainer\n\t\t\t\tteamId={teamId}\n\t\t\t\tuserId={userId}\n\t\t\t\theight={files.length > 0 ? 70 : 80}\n\t\t\t\tcreateDirectMessageLoading={createDirectMessageLoading}\n\t\t\t/>\n\t\t\t<SendMessage\n\t\t\t\tonSubmit={async (text) => {\n\t\t\t\t\tawait createDirectMessage({\n\t\t\t\t\t\tvariables: {\n\t\t\t\t\t\t\tteamId: parseInt(teamId),\n\t\t\t\t\t\t\ttext: text || undefined,\n\t\t\t\t\t\t\tfiles,\n\t\t\t\t\t\t\treceiverId: parseInt(userId),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tsetFiles([]);\n\t\t\t\t}}\n\t\t\t\tplaceholder={getUser.username}\n\t\t\t\tonDrop={onDrop}\n\t\t\t\tcreateMessageLoading={createDirectMessageLoading}\n\t\t\t\tfiles={files}\n\t\t\t\tsetFiles={setFiles}\n\t\t\t/>\n\t\t</AppLayout>\n\t);\n}\n\nconst directMessageMeQuery = gql`\n\tquery($userId: Int!) {\n\t\tgetUser(userId: $userId) {\n\t\t\tusername\n\t\t}\n\n\t\tme {\n\t\t\tid\n\t\t\tusername\n\t\t\tteams {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tadmin\n\t\t\t\tdirectMessageMembers {\n\t\t\t\t\tid\n\t\t\t\t\tusername\n\t\t\t\t}\n\t\t\t\tchannels {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default graphql(directMessageMeQuery, {\n\toptions: (props) => ({\n\t\tvariables: { userId: parseInt(props.match.params.userId, 10) },\n\t\tfetchPolicy: \"network-only\",\n\t}),\n})(DirectMessages);\n","/Users/sannge/Projects/slack/slack_clone_client/src/containers/DirectMessageContainer.js",["160","161","162","163","164"],"/Users/sannge/Projects/slack/slack_clone_client/src/components/DirectMessageModal.js",["165"],"import React from \"react\";\nimport { Form, Input, Modal, Button } from \"semantic-ui-react\";\nimport Downshift from \"downshift\";\n\nimport { useQuery } from \"@apollo/client\";\n\nimport { GET_TEAM_MEMBERS } from \"../graphql/team\";\n\nimport { withRouter } from \"react-router-dom\";\n\nfunction DirectMessageModal({ open, onClose, teamId, history, username }) {\n\tconst { data, loading, error } = useQuery(GET_TEAM_MEMBERS, {\n\t\tvariables: {\n\t\t\tteamId: parseInt(teamId),\n\t\t},\n\t});\n\n\treturn (\n\t\t<Modal open={open} onClose={onClose}>\n\t\t\t<Modal.Header>Direct Message People in Your Team</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t{!loading && (\n\t\t\t\t\t\t\t<Downshift\n\t\t\t\t\t\t\t\tonChange={(selectedUser) => {\n\t\t\t\t\t\t\t\t\thistory.push(`/view-team/user/${teamId}/${selectedUser.id}`);\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\t\tgetInputProps,\n\t\t\t\t\t\t\t\t\tgetItemProps,\n\t\t\t\t\t\t\t\t\tisOpen,\n\t\t\t\t\t\t\t\t\tinputValue,\n\t\t\t\t\t\t\t\t\tselectedItem,\n\t\t\t\t\t\t\t\t\thighlightedIndex,\n\t\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t{...getInputProps({\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder: \"Choose the person...\",\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{isOpen ? (\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ border: \"1px solid #ccc\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t{data?.getTeamMembers\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"item: \", item.username, username);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!inputValue ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.username\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLocaleLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.includes(inputValue.toLocaleLowerCase())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.username !== username && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...getItemProps({ item: item })}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thighlightedIndex === index\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"lightgray\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"white\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedItem === item ? \"bold\" : \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"7px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.username}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Downshift>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Button fluid onClick={onClose}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Modal.Content>\n\t\t</Modal>\n\t);\n}\n\nexport default withRouter(DirectMessageModal);\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/Loading.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/FileUpload.js",[],"/Users/sannge/Projects/slack/slack_clone_client/src/components/Files.js",["166"],"import React, { useState, useEffect } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst Image = styled.img`\n\theight: 70px;\n\tmax-width: 300px;\n\tmargin-right: 5px;\n\tpadding: 5px;\n\tborder: 1px solid #eee;\n`;\n\nconst Video = styled.video`\n\theight: 70px;\n\tmax-width: 300px;\n\tmargin-right: 5px;\n\tpadding: 5px;\n`;\nfunction Files({ files, setFiles, createMessageLoading }) {\n\t// useEffect(() => {\n\t// \treturn () => {\n\t// \t\tref.current.forEach((s) => {\n\t// \t\t\tURL.revokeObjectURL(s);\n\t// \t\t});\n\t// \t};\n\t// }, []);\n\n\tconst [onTop, setOnTop] = useState(null);\n\tconst removeFile = (fileIndex) => {\n\t\tconst copyFiles = [...files];\n\t\tconst filteredFiles = copyFiles.filter((_, index) => index !== fileIndex);\n\n\t\tsetFiles(filteredFiles);\n\t};\n\tconsole.log(files);\n\n\treturn (\n\t\t<div style={{ display: \"flex\", width: \"400px\" }}>\n\t\t\t{files.map((file, index) => {\n\t\t\t\tconst src = URL.createObjectURL(new Blob([file]));\n\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} style={{ marginRight: \"12px\" }}>\n\t\t\t\t\t\t{file.type.includes(\"video\") ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonMouseEnter={() => setOnTop(index + 1)}\n\t\t\t\t\t\t\t\tonMouseLeave={() => setOnTop(null)}\n\t\t\t\t\t\t\t\tstyle={{ position: \"relative\" }}>\n\t\t\t\t\t\t\t\t<Video src={src} alt='' />\n\t\t\t\t\t\t\t\t{onTop && onTop === index + 1 && (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={() => removeFile(index)}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\tright: \"-5px\",\n\t\t\t\t\t\t\t\t\t\t\ttop: \"-2px\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"19px\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"19px\",\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"50%\",\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#444444\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t<Icon name='times' style={{ marginLeft: \"1px\" }} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonMouseEnter={() => setOnTop(index + 1)}\n\t\t\t\t\t\t\t\tonMouseLeave={() => setOnTop(null)}\n\t\t\t\t\t\t\t\tstyle={{ position: \"relative\" }}>\n\t\t\t\t\t\t\t\t<Image src={src} alt='' />\n\t\t\t\t\t\t\t\t{onTop && onTop === index + 1 && !createMessageLoading && (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={() => removeFile(index)}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\tright: \"-5px\",\n\t\t\t\t\t\t\t\t\t\t\ttop: \"-2px\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"19px\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"19px\",\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"50%\",\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#444444\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#eee\",\n\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t<Icon style={{ marginLeft: \"1px\" }} name='times' />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default Files;\n","/Users/sannge/Projects/slack/slack_clone_client/src/components/MultiSelectUsers.js",["167"],"import React from \"react\";\nimport { GET_TEAM_MEMBERS } from \"../graphql/team\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction MultiSelectUsers({\n\tvalue,\n\thandleChange,\n\tplaceholder,\n\tteamId,\n\tcurrentUserId,\n}) {\n\tconsole.log(teamId);\n\tconst { data, loading, error } = useQuery(GET_TEAM_MEMBERS, {\n\t\tvariables: { teamId: teamId },\n\t});\n\tif (loading) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Dropdown\n\t\t\tplaceholder={placeholder}\n\t\t\tvalue={value}\n\t\t\tfluid\n\t\t\tmultiple\n\t\t\tsearch\n\t\t\tselection\n\t\t\tonChange={handleChange}\n\t\t\toptions={data.getTeamMembers\n\t\t\t\t.filter((tm) => tm.id !== currentUserId)\n\t\t\t\t.map((tm) => ({\n\t\t\t\t\tkey: tm.id,\n\t\t\t\t\tvalue: tm.id,\n\t\t\t\t\ttext: tm.username,\n\t\t\t\t}))}\n\t\t/>\n\t);\n}\n\nexport default MultiSelectUsers;\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":14,"column":10,"nodeType":"174","messageId":"175","endLine":14,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"177","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"178","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"179","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":10,"column":1,"nodeType":"182","endLine":14,"endColumn":3},{"ruleId":"172","severity":1,"message":"183","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":14},{"ruleId":"172","severity":1,"message":"184","line":56,"column":9,"nodeType":"174","messageId":"175","endLine":56,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":61,"column":5,"nodeType":"187","endLine":61,"endColumn":32,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"189","line":57,"column":18,"nodeType":"174","messageId":"175","endLine":57,"endColumn":31},{"ruleId":"172","severity":1,"message":"190","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","endLine":9,"endColumn":9},{"ruleId":"172","severity":1,"message":"191","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":13},{"ruleId":"172","severity":1,"message":"192","line":7,"column":27,"nodeType":"174","messageId":"175","endLine":7,"endColumn":32},{"ruleId":"172","severity":1,"message":"193","line":13,"column":8,"nodeType":"174","messageId":"175","endLine":13,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":209,"column":20,"nodeType":"196","endLine":209,"endColumn":51},{"ruleId":"197","severity":1,"message":"198","line":210,"column":21,"nodeType":"196","endLine":214,"endColumn":23},{"ruleId":"172","severity":1,"message":"199","line":5,"column":2,"nodeType":"174","messageId":"175","endLine":5,"endColumn":16},{"ruleId":"172","severity":1,"message":"200","line":6,"column":2,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":16},{"ruleId":"172","severity":1,"message":"178","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"179","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":16},{"ruleId":"172","severity":1,"message":"201","line":49,"column":10,"nodeType":"174","messageId":"175","endLine":49,"endColumn":17},{"ruleId":"172","severity":1,"message":"193","line":11,"column":8,"nodeType":"174","messageId":"175","endLine":11,"endColumn":18},{"ruleId":"172","severity":1,"message":"202","line":59,"column":4,"nodeType":"174","messageId":"175","endLine":59,"endColumn":10},{"ruleId":"172","severity":1,"message":"203","line":60,"column":4,"nodeType":"174","messageId":"175","endLine":60,"endColumn":10},{"ruleId":"194","severity":1,"message":"195","line":190,"column":19,"nodeType":"196","endLine":190,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":191,"column":20,"nodeType":"196","endLine":195,"endColumn":22},{"ruleId":"172","severity":1,"message":"204","line":12,"column":25,"nodeType":"174","messageId":"175","endLine":12,"endColumn":30},{"ruleId":"172","severity":1,"message":"176","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"204","line":14,"column":25,"nodeType":"174","messageId":"175","endLine":14,"endColumn":30},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Channels' is defined but never used.","'Teams' is defined but never used.","'Messages' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'decode' is defined but never used.","'empty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFiles'. Either include it or remove the dependency array. If 'setFiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["207"],"'currentTeamId' is assigned a value but never used.","'normalizeErrors' is defined but never used.","'gql' is defined but never used.","'Image' is defined but never used.","'FileUpload' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'ApolloProvider' is defined but never used.","'createHttpLink' is defined but never used.","'teamIdx' is assigned a value but never used.","'teamId' is assigned a value but never used.","'userId' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [teamId, userId, channelId, setFiles]",{"range":"210","text":"211"},[1112,1139],"[teamId, userId, channelId, setFiles]"]